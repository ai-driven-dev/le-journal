---
description: Backend controllers and REST API
globs: apps/backend/**/*.ts
---
- `ValidationPipe` might no be necessary because `main.ts` uses `useGlobalPipes`.
- Controllers handle only DTOs for a clear, decoupled API.
- Controllers call use-cases only, no service or repository calls.
- Use [api-response.decorator.ts](mdc:apps/backend/src/infrastructure/http/api-response.decorator.ts) and [api-response-redirect.decorator.ts](mdc:apps/backend/src/infrastructure/http/api-response-redirect.decorator.ts)

Example `presentation/controllers/projects.controller.ts`:
```typescript
@ApiTags('Projects')
@Controller('projects')
export class ProjectsController {
  constructor(
    private readonly createProjectUseCase: CreateProjectUseCase,
    private readonly projectMapper: ProjectMapper,
  ) {}

  @Post('create')
  @ApiAuthOperation('Cr√©er un nouveau projet.', {
    type: Project,
  })
  @UseGuards(JwtAuthGuard, CheckOnboardingGuard)
  async createProject(@GetUser() user: UserDomain): Promise<Project> {
    const projectDomain = await this.createProjectUseCase.execute({
      userId: user.id,
      userEmail: user.email,
    });

    return this.projectMapper.toDTO(projectDomain);
  }
```