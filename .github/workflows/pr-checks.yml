name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8.14.1'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Check if lockfile is outdated
        run: pnpm install --check || echo "PNPM_LOCKFILE_OUTDATED=true" >> $GITHUB_ENV

      - name: Install dependencies (force update if needed)
        run: |
          if [ "$PNPM_LOCKFILE_OUTDATED" == "true" ]; then
            pnpm install --no-frozen-lockfile
          else
            pnpm install --frozen-lockfile
          fi

      - name: Generate Prisma types first
        run: pnpm --filter backend exec prisma generate

      - name: Build shared packages
        run: pnpm --filter "@le-journal/shared-types" build

      - name: Run lint with fix
        run: pnpm lint:fix

      - name: Run format with fix
        run: pnpm format:fix

      - name: Type check
        run: pnpm typecheck

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Check for changes
        id: git-check
        run: |
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Commit linting & formatting changes
        if: env.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "style: apply linting and formatting fixes"
          git push

  security-scan:
    name: OWASP Dependency-Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: '${{ github.repository }}'
          path: '.'
          format: 'HTML'
          out: 'dependency-check-report'
          args: '--failOnCVSS 7'
