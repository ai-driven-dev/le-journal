{
  "openapi": "3.0.0",
  "paths": {
    "/api/users": {
      "get": {
        "operationId": "UsersController_getAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDomain"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer tous les utilisateurs",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/projects": {
      "get": {
        "operationId": "ProjectsController_getProject",
        "parameters": [
          {
            "name": "projectNumber",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDomain"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer le projet de l'utilisateur",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/projects/prompt": {
      "put": {
        "operationId": "ProjectsController_updateProjectPrompt",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUpdate"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour les instructions du prompt du projet",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/newsletters": {
      "get": {
        "operationId": "NewsletterController_getNewsletters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of newsletter subscriptions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NewsletterDomain"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all newsletter subscriptions",
        "tags": [
          "Newsletters"
        ]
      }
    },
    "/api/newsletters/emails": {
      "get": {
        "operationId": "NewsletterController_getAllEmails",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of emails retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailDomain"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all newsletter emails",
        "tags": [
          "Newsletters"
        ]
      }
    },
    "/auth/google": {
      "get": {
        "operationId": "AuthController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Initiate Google OAuth login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "AuthController_googleAuthCallback",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Redirect to frontend with JWT cookie"
          }
        },
        "summary": "Handle Google OAuth callback",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        },
        "summary": "Logout user",
        "tags": [
          "Authentication"
        ]
      }
    }
  },
  "info": {
    "title": "Le Journal API",
    "description": "Documentation de l'API Le Journal",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "UserDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c123e456-789b-12d3-a456-426614174000",
            "description": "ID de l'utilisateur"
          },
          "email": {
            "type": "string",
            "example": "john.doe@email.com",
            "description": "Email de l'utilisateur"
          },
          "role": {
            "type": "string",
            "example": "ADMIN",
            "description": "Rôle de l'utilisateur"
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "description": "Nom de l'utilisateur"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-02-08T12:00:00.000Z",
            "description": "Date de création"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-02-09T14:30:00.000Z",
            "description": "Date de mise à jour"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.png",
            "description": "Avatar de l'utilisateur"
          }
        },
        "required": [
          "id",
          "email",
          "role",
          "name",
          "createdAt",
          "updatedAt",
          "avatar"
        ]
      },
      "ProjectDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c123e456-789b-12d3-a456-426614174000",
            "description": "ID du projet"
          },
          "name": {
            "type": "string",
            "example": "Mon super projet",
            "description": "Nom du projet"
          },
          "slug": {
            "type": "string",
            "example": "mon-super-projet",
            "description": "Slug du projet"
          },
          "newsletterAlias": {
            "type": "string",
            "example": "mon-alias",
            "description": "Alias unique pour les newsletters"
          },
          "projectNumber": {
            "type": "number",
            "example": 1,
            "description": "Numéro du projet"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-02-08T12:00:00.000Z",
            "description": "Date de création"
          },
          "promptInstruction": {
            "type": "string",
            "example": "Write a blog post about AI and its impact on society",
            "description": "Instruction pour le projet"
          },
          "lastPromptUpdate": {
            "format": "date-time",
            "type": "string",
            "example": "2024-02-08T12:00:00.000Z",
            "description": "Date de la dernière mise à jour du prompt"
          },
          "canUpdatePrompt": {
            "type": "boolean",
            "example": true,
            "description": "Indique si le prompt peut être mis à jour"
          }
        },
        "required": [
          "id",
          "name",
          "slug",
          "newsletterAlias",
          "projectNumber",
          "createdAt",
          "promptInstruction",
          "canUpdatePrompt"
        ]
      },
      "ProjectUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c123e456-789b-12d3-a456-426614174000",
            "description": "Project ID"
          },
          "promptInstruction": {
            "type": "string",
            "description": "The instruction prompt for the project",
            "example": "Write a blog post about AI and its impact on society"
          }
        },
        "required": [
          "id",
          "promptInstruction"
        ]
      },
      "NewsletterDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the newsletter subscription",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "description": "The email address subscribed to the newsletter",
            "example": "user@example.com"
          },
          "subscribedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the user subscribed to the newsletter",
            "example": "2024-02-08T20:00:00.000Z"
          },
          "subscriptionStatus": {
            "type": "string",
            "description": "The current status of the newsletter subscription",
            "enum": [
              "ACTIVE",
              "IN_PROGRESS",
              "PENDING",
              "FAILED"
            ],
            "example": "PENDING"
          }
        },
        "required": [
          "id",
          "email",
          "subscribedAt",
          "subscriptionStatus"
        ]
      },
      "ArticleDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of the article",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "subject": {
            "type": "string",
            "description": "Subject or main topic of the article",
            "example": "Building Scalable Backend Services"
          },
          "description": {
            "type": "string",
            "description": "Description of the article content",
            "example": "Learn the best practices for building enterprise-grade NestJS applications..."
          },
          "link": {
            "type": "string",
            "description": "URL to the full article",
            "example": "https://example.com/article/nestjs-best-practices",
            "nullable": true
          },
          "score": {
            "type": "number",
            "description": "Relevance score of the article (0-1)",
            "example": 0.95
          },
          "extractedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date and time when the article was extracted",
            "example": "2024-01-01T12:00:00Z"
          }
        },
        "required": [
          "id",
          "subject",
          "description",
          "link",
          "score",
          "extractedAt"
        ]
      },
      "EmailDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique email ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "subject": {
            "type": "string",
            "description": "Email subject",
            "example": "Newsletter #42 - Latest tech news"
          },
          "content": {
            "type": "string",
            "description": "Raw email content",
            "example": "Email content in text format..."
          },
          "receivedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Email received date",
            "example": "2024-03-20T10:00:00Z"
          },
          "status": {
            "type": "string",
            "description": "Email processing status",
            "enum": [
              "RECEIVED",
              "PROCESSED",
              "FAILED"
            ],
            "example": "RECEIVED"
          },
          "articles": {
            "description": "Articles associated with the email",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleDomain"
            }
          }
        },
        "required": [
          "id",
          "subject",
          "content",
          "receivedAt",
          "status",
          "articles"
        ]
      }
    }
  }
}